{
  "name": "riot-api",
  "version": "0.1.0",
  "description": "Riot Games API library",
  "author": {
    "name": "Martin Rump",
    "email": "admin@maddin.cc"
  },
  "keywords": [
    "API",
    "Riot",
    "Riot Games",
    "LOL",
    "League Of Legends"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/maddin77/riot-api.git"
  },
  "bugs": {
    "url": "https://github.com/maddin77/riot-api/issues"
  },
  "main": "index",
  "dependencies": {
    "request": "2.29.0"
  },
  "engines": [
    "node >= 0.8.0"
  ],
  "readme": "# RiotAPI\r\nA node.js library for fetching League of Legends data from the [Riot API](https://developer.riotgames.com/).\r\n\r\nRiot's API requires a API Key. More information about how to get a Key, Rate Limits and more can be found on their [official Site](https://developer.riotgames.com/docs/getting-started).\r\n\r\nGame constants like queue types, maps, game types, game modes and rune slots are explained [here](https://developer.riotgames.com/docs/game-constants).\r\n\r\n## Getting started\r\nRiotAPI is designed to be simple.\r\n\r\n```javascript\r\nvar RiotApi = require('riot-api');\r\nvar api = new RiotApi('YOUR_API_KEY_GOES_HERE');\r\n```\r\nEach Method takes an options object and a callback. The callback is always a json object, either a set of results or a status message if the call was invalid.\r\n\r\n## Methods\r\n### api.getChampions(options, callback)\r\nRetrieve all champions currently in the game.\r\n\r\n#### Options:\r\n\r\n - `region` - **string** - Region where to retrieve the data. If no region is given, `NA` will be used. Currently available regions are: `NA`, `EUW`, `EUNE`.\r\n - `filter` - **object** - (Optional) Filter the result to only get Champions who match the specific options.\r\n- `active` - **boolean** - Indicates if the champion is active.\r\n- `rankedPlayEnabled` - **boolean** - Ranked play enabled flag.\r\n- `botEnabled` - **boolean** - Bot enabled flag (for custom games).\r\n- `botMmEnabled` - **boolean** - Bot Match Made enabled flag (for Co-op vs. AI games).\r\n- `freeToPlay` - **boolean** - Indicates if the champion is free to play. Free to play champions are rotated periodically.\r\n- `attackRank` - **int** - Champion attack rank.\r\n- `defenseRank` - **int** - Champion defense rank.\r\n- `difficultyRank` - **int** - Champion difficulty rank.\r\n- `magicRank` - **int** - Champion magic rank.\r\n- `id` - **int** - Champion ID.\r\n- `name` - **string** - Champion name.\r\n\r\n#### Result:\r\n\r\nThe Result is a array of objects containing information about the champion. An object might look like this:\r\n```javascript\r\n{\r\n    \"botMmEnabled\": false,\r\n    \"defenseRank\": 4,\r\n    \"attackRank\": 8,\r\n    \"id\": 266,\r\n    \"rankedPlayEnabled\": true,\r\n    \"name\": \"Aatrox\",\r\n    \"botEnabled\": false,\r\n    \"difficultyRank\": 6,\r\n    \"active\": true,\r\n    \"freeToPlay\": false,\r\n    \"magicRank\": 3\r\n}\r\n```\r\n\r\n#### Example:\r\n```javascript\r\napi.getChampions({\r\n    'region': 'NA',\r\n    'filter': {\r\n        'freeToPlay': true\r\n    }\r\n}, function(data) {\r\n    console.log('These champions are currently free to play:');\r\n    data.forEach(function(champion) {\r\n        console.log('Name: ' + champion.name + ', Difficulty: ' + champion.difficultyRank);\r\n    });\r\n});\r\n```\r\n### api.getRecentGames(options, callback)\r\nGet the recent games for summoner.\r\n\r\n#### Options:\r\n\r\n - `region` - **string** - Region where to retrieve the data. If no region is given, `NA` will be used. Currently available regions are: `NA`, `EUW`, `EUNE`.\r\n - `summonerId` - **int** - Summoner ID*.\r\n - `summonerName` - **string** - Summoner Name*.\r\n\r\n*Either Summoner ID or Name is required.\r\n\r\n#### Result:\r\n\r\nThe Result is a object with informations about the recent games of the given summoner. The object is the exact same object given by the default API call, which can be tested [here](https://developer.riotgames.com/api/methods#!/292/1029).\r\n\r\n#### Example:\r\n```javascript\r\napi.getChampions({\r\n    'region': 'NA',\r\n    'summonerName': 'TheOddOne'\r\n    //-OR-\r\n    //'summonerId': 60783\r\n}, function(data) {\r\n    //process data\r\n});\r\n```\r\n\r\n### api.getLeagues(options, callback)\r\nRetrieves leagues data for summoner, including leagues for all of summoner's teams.\r\n\r\n#### Options:\r\n\r\n - `region` - **string** - Region where to retrieve the data. If no region is given, `NA` will be used. Currently available regions are: `NA`, `EUW`, `EUNE`, `BR`, `TR`.\r\n - `summonerId` - **int** - Summoner ID*.\r\n - `summonerName` - **string** - Summoner Name*.\r\n - `queue` - **string** - (Optional) Only recive data for the given queue type. Legal values are: `RANKED_SOLO_5x5`, `RANKED_TEAM_3x3`, `RANKED_TEAM_5x5`.\r\n\r\n*Either Summoner ID or Name is required.\r\n\r\n#### Result:\r\n\r\nThe Result is a object with data about the leagues for the given summoner. The object is the exact same object given by the default API call (except if you only want to recieve a specific queue type), which can be tested [here](https://developer.riotgames.com/api/methods#!/254/959).\r\n\r\n#### Example:\r\n```javascript\r\napi.getLeagues({\r\n    'region': 'NA',\r\n    'queue': 'RANKED_SOLO_5x5',\r\n    'summonerName': 'TheOddOne'\r\n    //-OR-\r\n    //'summonerId': 60783\r\n}, function(data) {\r\n    //process data\r\n});\r\n```\r\n\r\n### api.getStatsSummary(options, callback)\r\nGet player stats summaries for summoner.\r\n\r\n#### Options:\r\n\r\n - `region` - **string** - Region where to retrieve the data. If no region is given, `NA` will be used. Currently available regions are: `NA`, `EUW`, `EUNE`.\r\n - `summonerId` - **int** - Summoner ID*.\r\n - `summonerName` - **string** - Summoner Name*.\r\n - `season` - **int** - (Optional) If specified, stats for the given season are returned. Otherwise, stats for the current season are returned.\r\n\r\n*Either Summoner ID or Name is required.\r\n\r\n#### Result:\r\n\r\nThe Result is a object with data about the stats of summoner. The object is the exact same object given by the default API call, which can be tested [here](https://developer.riotgames.com/api/methods#!/294/1035).\r\n\r\n#### Example:\r\n```javascript\r\napi.getStatsSummary({\r\n    'region': 'NA',\r\n    'season': 3,\r\n    'summonerName': 'TheOddOne'\r\n    //-OR-\r\n    //'summonerId': 60783\r\n}, function(data) {\r\n    //process data\r\n});\r\n```\r\n\r\n### api.getRankedStats(options, callback)\r\nGet ranked stats for summoner. Includes statistics for Twisted Treeline and Summoner's Rift\r\n\r\n#### Options:\r\n\r\n - `region` - **string** - Region where to retrieve the data. If no region is given, `NA` will be used. Currently available regions are: `NA`, `EUW`, `EUNE`.\r\n - `summonerId` - **int** - Summoner ID*.\r\n - `summonerName` - **string** - Summoner Name*.\r\n - `season` - **int** - (Optional) If specified, stats for the given season are returned. Otherwise, stats for the current season are returned.\r\n\r\n*Either Summoner ID or Name is required.\r\n\r\n#### Result:\r\n\r\nThe Result is a object with data about the ranked stats of summoner. The object is the exact same object given by the default API call, which can be tested [here](https://developer.riotgames.com/api/methods#!/294/1035).\r\n\r\n#### Example:\r\n```javascript\r\napi.getRankedStats({\r\n    'region': 'NA',\r\n    'season': 3,\r\n    'summonerName': 'TheOddOne'\r\n    //-OR-\r\n    //'summonerId': 60783\r\n}, function(data) {\r\n    //process data\r\n});\r\n```\r\n\r\n### api.getMasteries(options, callback)\r\nGet mastery pages for summoner.\r\n\r\n#### Options:\r\n\r\n - `region` - **string** - Region where to retrieve the data. If no region is given, `NA` will be used. Currently available regions are: `NA`, `EUW`, `EUNE`.\r\n - `summonerId` - **int** - Summoner ID*.\r\n - `summonerName` - **string** - Summoner Name*.\r\n\r\n*Either Summoner ID or Name is required.\r\n\r\n#### Result:\r\n\r\nThe Result is a object with data about the mastery pages of summoner. The object is the exact same object given by the default API call, which can be tested [here](https://developer.riotgames.com/api/methods#!/293/1030).\r\n\r\n#### Example:\r\n```javascript\r\napi.getMasteries({\r\n    'region': 'NA',\r\n    'summonerName': 'TheOddOne'\r\n    //-OR-\r\n    //'summonerId': 60783\r\n}, function(data) {\r\n    //process data\r\n});\r\n```\r\n\r\n### api.getRunes(options, callback)\r\nGet rune pages for summoner.\r\n\r\n#### Options:\r\n\r\n - `region` - **string** - Region where to retrieve the data. If no region is given, `NA` will be used. Currently available regions are: `NA`, `EUW`, `EUNE`.\r\n - `summonerId` - **int** - Summoner ID*.\r\n - `summonerName` - **string** - Summoner Name*.\r\n\r\n*Either Summoner ID or Name is required.\r\n\r\n#### Result:\r\n\r\nThe Result is a object with data about the rune pages of summoner. The object is the exact same object given by the default API call, which can be tested [here](https://developer.riotgames.com/api/methods#!/293/1033).\r\n\r\nThe `runeSlotId` fields are explained [here](https://s3-us-west-1.amazonaws.com/riot-api/img/rune-slot-ids.png).\r\n\r\n#### Example:\r\n```javascript\r\napi.getRunes({\r\n    'region': 'NA',\r\n    'summonerName': 'TheOddOne'\r\n    //-OR-\r\n    //'summonerId': 60783\r\n}, function(data) {\r\n    //process data\r\n});\r\n```\r\n\r\n### api.getSummonerNamesByIds(options, callback)\r\nGet list of summoner names by summoner IDs.\r\n\r\n#### Options:\r\n\r\n - `region` - **string** - Region where to retrieve the data. If no region is given, `NA` will be used. Currently available regions are: `NA`, `EUW`, `EUNE`.\r\n - `summonerIds` - **array[int]** - Summoner ID's.\r\n\r\n#### Result:\r\n\r\nThe Result is an array with objects containing name and id of a summoner. \r\n```javascript\r\n[\r\n    {\r\n        \"id\": 60783,\r\n        \"name\": \"TheOddOne\"\r\n    },\r\n    {\r\n        \"id\": 5908,\r\n        \"name\": \"Dyrus\"\r\n    }\r\n]\r\n```\r\n#### Example:\r\n```javascript\r\napi.getRunes({\r\n    'region': 'NA',\r\n    'summonerIds': [60783, 5908]\r\n}, function(data) {\r\n    //process data\r\n});\r\n```\r\n\r\n### api.getSummoner(options, callback)\r\nGet basic information about summoner.\r\n\r\n#### Options:\r\n\r\n - `region` - **string** - Region where to retrieve the data. If no region is given, `NA` will be used. Currently available regions are: `NA`, `EUW`, `EUNE`.\r\n - `summonerId` - **int** - Summoner ID*.\r\n - `summonerName` - **string** - Summoner Name*.\r\n\r\n*Either Summoner ID or Name is required.\r\n\r\n#### Result:\r\n\r\nThe Result is an object containing basic information of a summoner. \r\n```javascript\r\n{\r\n    \"id\": 60783,\r\n    \"name\": \"TheOddOne\",\r\n    \"profileIconId\": 558,\r\n    \"summonerLevel\": 30,\r\n    \"revisionDate\": 1386684611000,\r\n    \"revisionDateStr\": \"12/10/2013 02:10 PM UTC\"\r\n}\r\n```\r\n#### Example:\r\n```javascript\r\napi.getSummoner({\r\n    'region': 'NA',\r\n    'summonerName': 'TheOddOne'\r\n    //-OR-\r\n    //'summonerId': 60783\r\n}, function(data) {\r\n    //process data\r\n});\r\n```\r\n\r\n### api.getTeams(options, callback)\r\nRetrieves teams of summoner.\r\n\r\n#### Options:\r\n\r\n - `region` - **string** - Region where to retrieve the data. If no region is given, `NA` will be used. Currently available regions are: `NA`, `EUW`, `EUNE`, `TR`, `BR`.\r\n - `summonerId` - **int** - Summoner ID*.\r\n - `summonerName` - **string** - Summoner Name*.\r\n\r\n*Either Summoner ID or Name is required.\r\n\r\n#### Result:\r\n\r\nThe Result is a object with data about the teams of summoner. The object is the exact same object given by the default API call, which can be tested [here](https://developer.riotgames.com/api/methods#!/256/961).\r\n\r\n#### Example:\r\n```javascript\r\napi.getTeams({\r\n    'region': 'NA',\r\n    'summonerName': 'TheOddOne'\r\n    //-OR-\r\n    //'summonerId': 60783\r\n}, function(data) {\r\n    //process data\r\n});\r\n```\r\n",
  "readmeFilename": "README.md",
  "_id": "riot-api@0.1.0",
  "dist": {
    "shasum": "1dae5efc57de40783592771e39592dc69bfe0d0c",
    "tarball": "http://registry.npmjs.org/riot-api/-/riot-api-0.1.0.tgz"
  },
  "_from": "riot-api@*",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "maddin",
    "email": "maddindag@hotmail.de"
  },
  "maintainers": [
    {
      "name": "maddin",
      "email": "maddindag@hotmail.de"
    }
  ],
  "directories": {},
  "_shasum": "1dae5efc57de40783592771e39592dc69bfe0d0c",
  "_resolved": "https://registry.npmjs.org/riot-api/-/riot-api-0.1.0.tgz"
}
